{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\GitHub\\\\KPS104\\\\crud-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navigation from \"./Components/Navigation\";\nimport Container from \"./Components/Component\";\nimport Form from \"./Components/Form\";\nimport Card from \"./Components/Card\";\nimport Label from \"./Components/Label\";\nimport Input from \"./Components/Input\";\nimport Button from \"./Components/Button\";\nimport List from \"./Components/List\";\nimport Backdrop from \"./Components/Backdrop\";\nimport swal from \"sweetalert\"; // const navigation = [\"Home\", \"About\", \"Service\", \"Contact\"];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navigation = [{\n  title: \"home\",\n  path: \"/\"\n}, {\n  title: \"login\",\n  path: \"/login\"\n}];\n\nfunction App() {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [userID, setUserID] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorTitle, setErrorTitle] = useState(\"\");\n  const [errorMessage, SetErrorMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [updated, setUpdated] = useState(false);\n\n  function updateFunction() {\n    setUpdated(true);\n    setTimeout(() => {\n      setUpdated(false);\n    }, 100);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (username.trim() !== \"\" && email.trim() !== \"\" && number.trim() !== \"\" && password.trim() !== \"\") {\n      const user = {\n        username: username,\n        email: email,\n        number: number,\n        password: password\n      };\n      fetch(\"http://localhost:3001/register\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(response => {\n        if (!response.ok) {\n          throw Error(\"Хэрэглэгч бүртгэхэд алдаа гарлаа\");\n        }\n\n        return response.json();\n      }).then(result => swal(result.message, \"user registered\", \"success\")).catch(err => {\n        swal(\"error\", err.message, \"error\");\n      });\n      updateFunction();\n      resetForm();\n    } else {\n      setError(true);\n      setErrorTitle(\"Алдаа гарлаа\");\n      SetErrorMessage(\"Бүх талбаруудыг бөглөнө үү...\");\n    }\n  };\n\n  const deleteHandler = id => {\n    fetch(\"http://localhost:3001/deleteUser\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: id\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(\"Хэрэглэгч бүртгэхэд алдаа гарлаа\");\n      }\n\n      return response.json();\n    }).then(result => swal(result.message, \"user registered\", \"success\")).catch(err => {\n      swal(err.message);\n    });\n    updateFunction();\n    setEditMode(false);\n    resetForm();\n  };\n\n  const editHandler = id => {\n    const updateUserInfo = users.find(user => user._id === id);\n    setUsername(updateUserInfo.username);\n    setEmail(updateUserInfo.email);\n    setNumber(updateUserInfo.number);\n    setPassword(updateUserInfo.password);\n    setEditMode(true);\n    setUserID(id);\n  };\n\n  const updateHandler = id => {\n    const updatedUser = {\n      username: username,\n      email: email,\n      number: number,\n      password: password,\n      _id: id\n    };\n    fetch(\"http://localhost:3001/updateUser\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedUser)\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(\"Мэдээллийг шинэчлэхэд алдаа гарлаа...\");\n      }\n\n      return response.json();\n    }).then(result => swal(result.message)).catch(err => swal(err.message));\n    setEditMode(false);\n    resetForm();\n    updateFunction();\n  };\n\n  const hideModalHandler = () => {\n    setError(false);\n  };\n\n  function resetForm() {\n    setUsername(\"\");\n    setEmail(\"\");\n    setNumber(\"\");\n    setPassword(\"\");\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/allUsers\").then(res => res.json()).then(result => {\n      setUsers(result);\n    });\n  }, [updated]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Backdrop, {\n      title: errorTitle,\n      onClick: hideModalHandler,\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this), document.querySelector(\"#portal\")), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex items-center justify-between bg-green-400 font-bold text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pl-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl\",\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        nav: navigation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"my-6 w-full\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            submitHandler: editMode ? e => {\n              e.preventDefault();\n              updateHandler(userID);\n            } : submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              lab: \"Username\",\n              htmlFor: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setUsername(e.target.value),\n              placeholder: \"Username\",\n              id: \"username\",\n              value: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              lab: \"Email\",\n              htmlFor: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\",\n              id: \"email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              lab: \"Number\",\n              htmlFor: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setNumber(e.target.value),\n              placeholder: \"Number\",\n              id: \"number\",\n              type: \"number\",\n              value: number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              lab: \"Password\",\n              htmlFor: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"Password\",\n              id: \"password\",\n              type: \"password\",\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              val: editMode ? \"Засах\" : \"Бүртгэх\",\n              type: \"normal\",\n              bg: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [users && /*#__PURE__*/_jsxDEV(List, {\n            datas: users,\n            deleteHandler: deleteHandler,\n            editHandler: editHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fy51coucY9YkIqGjZT2ulORSRtg=\");\n\n_c = App;\nexport default App; // Гэрт fetch API ашиглан өгөгдөл татах\n// https://jsonplaceholder.typicode.com/users\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/asus/Documents/GitHub/KPS104/crud-react/src/App.js"],"names":["Fragment","useEffect","useState","ReactDOM","Navigation","Container","Form","Card","Label","Input","Button","List","Backdrop","swal","navigation","title","path","App","editMode","setEditMode","userID","setUserID","users","setUsers","username","setUsername","email","setEmail","number","setNumber","password","setPassword","errorTitle","setErrorTitle","errorMessage","SetErrorMessage","error","setError","updated","setUpdated","updateFunction","setTimeout","submitHandler","e","preventDefault","trim","user","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","result","message","catch","err","resetForm","deleteHandler","id","_id","editHandler","updateUserInfo","find","updateHandler","updatedUser","hideModalHandler","res","createPortal","document","querySelector","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navigation from \"./Components/Navigation\";\r\nimport Container from \"./Components/Component\";\r\nimport Form from \"./Components/Form\";\r\nimport Card from \"./Components/Card\";\r\nimport Label from \"./Components/Label\";\r\nimport Input from \"./Components/Input\";\r\nimport Button from \"./Components/Button\";\r\nimport List from \"./Components/List\";\r\nimport Backdrop from \"./Components/Backdrop\";\r\nimport swal from \"sweetalert\";\r\n\r\n// const navigation = [\"Home\", \"About\", \"Service\", \"Contact\"];\r\n\r\nconst navigation = [\r\n  {\r\n    title: \"home\",\r\n    path: \"/\",\r\n  },\r\n  {\r\n    title: \"login\",\r\n    path: \"/login\",\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorTitle, setErrorTitle] = useState(\"\");\r\n  const [errorMessage, SetErrorMessage] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [updated, setUpdated] = useState(false);\r\n\r\n  function updateFunction() {\r\n    setUpdated(true);\r\n    setTimeout(() => {\r\n      setUpdated(false);\r\n    }, 100);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      username.trim() !== \"\" &&\r\n      email.trim() !== \"\" &&\r\n      number.trim() !== \"\" &&\r\n      password.trim() !== \"\"\r\n    ) {\r\n      const user = {\r\n        username: username,\r\n        email: email,\r\n        number: number,\r\n        password: password,\r\n      };\r\n\r\n      fetch(\"http://localhost:3001/register\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw Error(\"Хэрэглэгч бүртгэхэд алдаа гарлаа\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((result) => swal(result.message, \"user registered\", \"success\"))\r\n        .catch((err) => {\r\n          swal(\"error\", err.message, \"error\");\r\n        });\r\n\r\n      updateFunction();\r\n      resetForm();\r\n    } else {\r\n      setError(true);\r\n      setErrorTitle(\"Алдаа гарлаа\");\r\n      SetErrorMessage(\"Бүх талбаруудыг бөглөнө үү...\");\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    fetch(\"http://localhost:3001/deleteUser\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ _id: id }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(\"Хэрэглэгч бүртгэхэд алдаа гарлаа\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => swal(result.message, \"user registered\", \"success\"))\r\n      .catch((err) => {\r\n        swal(err.message);\r\n      });\r\n\r\n    updateFunction();\r\n    setEditMode(false);\r\n    resetForm();\r\n  };\r\n\r\n  const editHandler = (id) => {\r\n    const updateUserInfo = users.find((user) => user._id === id);\r\n    setUsername(updateUserInfo.username);\r\n    setEmail(updateUserInfo.email);\r\n    setNumber(updateUserInfo.number);\r\n    setPassword(updateUserInfo.password);\r\n    setEditMode(true);\r\n    setUserID(id);\r\n  };\r\n\r\n  const updateHandler = (id) => {\r\n    const updatedUser = {\r\n      username: username,\r\n      email: email,\r\n      number: number,\r\n      password: password,\r\n      _id: id,\r\n    };\r\n    fetch(\"http://localhost:3001/updateUser\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedUser),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(\"Мэдээллийг шинэчлэхэд алдаа гарлаа...\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((result) => swal(result.message))\r\n      .catch((err) => swal(err.message));\r\n    setEditMode(false);\r\n    resetForm();\r\n    updateFunction();\r\n  };\r\n\r\n  const hideModalHandler = () => {\r\n    setError(false);\r\n  };\r\n\r\n  function resetForm() {\r\n    setUsername(\"\");\r\n    setEmail(\"\");\r\n    setNumber(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3001/allUsers\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setUsers(result);\r\n      });\r\n  }, [updated]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {error &&\r\n        ReactDOM.createPortal(\r\n          <Backdrop\r\n            title={errorTitle}\r\n            onClick={hideModalHandler}\r\n            message={errorMessage}\r\n          />,\r\n          document.querySelector(\"#portal\")\r\n        )}\r\n      <div className=\"w-full flex items-center justify-between bg-green-400 font-bold text-white\">\r\n        <div className=\"pl-4\">\r\n          <h1 className=\"text-3xl\">Logo</h1>\r\n        </div>\r\n        <Navigation nav={navigation} />\r\n      </div>\r\n      <main className=\"my-6 w-full\">\r\n        <Container>\r\n          <Card>\r\n            <Form\r\n              submitHandler={\r\n                editMode\r\n                  ? (e) => {\r\n                      e.preventDefault();\r\n                      updateHandler(userID);\r\n                    }\r\n                  : submitHandler\r\n              }\r\n            >\r\n              <Label lab=\"Username\" htmlFor=\"username\" />\r\n              <Input\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                id=\"username\"\r\n                value={username}\r\n              />\r\n\r\n              <Label lab=\"Email\" htmlFor=\"email\" />\r\n              <Input\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                id=\"email\"\r\n                value={email}\r\n              />\r\n\r\n              <Label lab=\"Number\" htmlFor=\"number\" />\r\n              <Input\r\n                onChange={(e) => setNumber(e.target.value)}\r\n                placeholder=\"Number\"\r\n                id=\"number\"\r\n                type=\"number\"\r\n                value={number}\r\n              />\r\n\r\n              <Label lab=\"Password\" htmlFor=\"password\" />\r\n              <Input\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n              />\r\n              <Button\r\n                val={editMode ? \"Засах\" : \"Бүртгэх\"}\r\n                type=\"normal\"\r\n                bg=\"green\"\r\n              />\r\n            </Form>\r\n          </Card>\r\n\r\n          <Card>\r\n            {users && (\r\n              <List\r\n                datas={users}\r\n                deleteHandler={deleteHandler}\r\n                editHandler={editHandler}\r\n              />\r\n            )}\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n          </Card>\r\n        </Container>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// Гэрт fetch API ашиглан өгөгдөл татах\r\n// https://jsonplaceholder.typicode.com/users\r\n"]},"metadata":{},"sourceType":"module"}